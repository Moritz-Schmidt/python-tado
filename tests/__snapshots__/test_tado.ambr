# serializer version: 1
# name: test_get_capabilities
  dict({
    'temperatures': dict({
      'celsius': dict({
        'max': 25.0,
        'min': 5.0,
        'step': 0.5,
      }),
      'fahrenheit': dict({
        'max': 77.0,
        'min': 41.0,
        'step': 0.5,
      }),
    }),
    'type': 'HEATING',
  })
# ---
# name: test_get_device_info
  dict({
    'celsius': 0.0,
    'fahrenheit': 0.0,
  })
# ---
# name: test_get_devices
  list([
    dict({
      'battery_state': None,
      'characteristics': dict({
        'capabilities': list([
          'RADIO_ENCRYPTION_KEY_ACCESS',
        ]),
      }),
      'child_lock_enabled': None,
      'connection_state': dict({
        'timestamp': '2024-02-27T20:13:45.407Z',
        'value': True,
      }),
      'current_fw_version': '92.1',
      'device_type': 'IB01',
      'in_pairing_mode': False,
      'mounting_state': None,
      'mounting_state_with_error': None,
      'orientation': None,
      'serial_no': 'SerialNo1',
      'short_serial_no': 'ShortSerialNo1',
    }),
    dict({
      'battery_state': 'NORMAL',
      'characteristics': dict({
        'capabilities': list([
          'INSIDE_TEMPERATURE_MEASUREMENT',
          'IDENTIFY',
        ]),
      }),
      'child_lock_enabled': True,
      'connection_state': dict({
        'timestamp': '2024-02-27T20:20:20.921Z',
        'value': True,
      }),
      'current_fw_version': '95.1',
      'device_type': 'VA02',
      'in_pairing_mode': None,
      'mounting_state': dict({
        'timestamp': '2024-02-19T17:23:30.537Z',
        'value': 'CALIBRATED',
      }),
      'mounting_state_with_error': 'CALIBRATED',
      'orientation': 'HORIZONTAL',
      'serial_no': 'SerialNo2',
      'short_serial_no': 'ShortSerialNo2',
    }),
    dict({
      'battery_state': 'NORMAL',
      'characteristics': dict({
        'capabilities': list([
          'INSIDE_TEMPERATURE_MEASUREMENT',
          'IDENTIFY',
        ]),
      }),
      'child_lock_enabled': True,
      'connection_state': dict({
        'timestamp': '2024-02-27T20:23:13.342Z',
        'value': True,
      }),
      'current_fw_version': '95.1',
      'device_type': 'VA02',
      'in_pairing_mode': None,
      'mounting_state': dict({
        'timestamp': '2024-02-26T13:33:10.647Z',
        'value': 'CALIBRATED',
      }),
      'mounting_state_with_error': 'CALIBRATED',
      'orientation': 'HORIZONTAL',
      'serial_no': 'SerialNo3',
      'short_serial_no': 'ShortSerialNo3',
    }),
    dict({
      'battery_state': 'NORMAL',
      'characteristics': dict({
        'capabilities': list([
          'INSIDE_TEMPERATURE_MEASUREMENT',
          'IDENTIFY',
        ]),
      }),
      'child_lock_enabled': True,
      'connection_state': dict({
        'timestamp': '2024-02-27T20:23:02.849Z',
        'value': True,
      }),
      'current_fw_version': '95.1',
      'device_type': 'VA02',
      'in_pairing_mode': None,
      'mounting_state': dict({
        'timestamp': '2023-10-09T15:39:08.131Z',
        'value': 'CALIBRATED',
      }),
      'mounting_state_with_error': 'CALIBRATED',
      'orientation': 'HORIZONTAL',
      'serial_no': 'SerialNo4',
      'short_serial_no': 'ShortSerialNo4',
    }),
    dict({
      'battery_state': 'NORMAL',
      'characteristics': dict({
        'capabilities': list([
          'INSIDE_TEMPERATURE_MEASUREMENT',
          'IDENTIFY',
        ]),
      }),
      'child_lock_enabled': True,
      'connection_state': dict({
        'timestamp': '2024-02-27T20:16:13.890Z',
        'value': True,
      }),
      'current_fw_version': '95.1',
      'device_type': 'VA02',
      'in_pairing_mode': None,
      'mounting_state': dict({
        'timestamp': '2024-02-04T10:17:00.266Z',
        'value': 'CALIBRATED',
      }),
      'mounting_state_with_error': 'CALIBRATED',
      'orientation': 'HORIZONTAL',
      'serial_no': 'SerialNo5',
      'short_serial_no': 'ShortSerialNo5',
    }),
  ])
# ---
# name: test_get_home_state
  dict({
    'presence': 'HOME',
    'presence_locked': True,
    'show_home_presence_switch_button': True,
    'show_switch_to_auto_geofencing_button': None,
  })
# ---
# name: test_get_me
  dict({
    'email': 'user@domain.tld',
    'homes': list([
      dict({
        'id': 1,
        'name': 'home name',
      }),
    ]),
    'id': '5',
    'locale': 'nl',
    'name': 'test_user',
    'username': 'user@domain.tld',
  })
# ---
# name: test_get_mobile_devices
  list([
    dict({
      'device_meta_data': dict({
        'locale': 'nl',
        'model': 'Model1',
        'os_version': '14',
        'platform': 'Android',
      }),
      'id': 123456,
      'location': dict({
        'at_home': True,
        'bearing_from_home': dict({
          'degrees': 21.4215315376382,
          'radians': 0.37387625615159,
        }),
        'relative_distance_from_home_fence': 0.0,
        'stale': False,
      }),
      'name': 'User1',
      'settings': dict({
        'geo_tracking_enabled': True,
        'on_demand_log_retrieval_enabled': False,
        'special_offers_enabled': True,
      }),
    }),
    dict({
      'device_meta_data': dict({
        'locale': 'nl',
        'model': 'Model2',
        'os_version': '14',
        'platform': 'Android',
      }),
      'id': 789012,
      'location': None,
      'name': 'User2',
      'settings': dict({
        'geo_tracking_enabled': False,
        'on_demand_log_retrieval_enabled': False,
        'special_offers_enabled': True,
      }),
    }),
  ])
# ---
# name: test_get_weather
  dict({
    'outside_temperature': dict({
      'celsius': 2.29,
      'fahrenheit': 36.12,
      'precision': dict({
        'celsius': 0.01,
        'fahrenheit': 0.01,
      }),
      'timestamp': '2024-02-27T20:29:49.360Z',
      'type': 'TEMPERATURE',
    }),
    'solar_intensity': dict({
      'percentage': 0.0,
      'timestamp': '2024-02-27T20:29:49.360Z',
      'type': 'PERCENTAGE',
    }),
    'weather_state': dict({
      'timestamp': '2024-02-27T20:29:49.360Z',
      'type': 'WEATHER_STATE',
      'value': 'NIGHT_CLOUDY',
    }),
  })
# ---
# name: test_get_zone_states
  list([
    dict({
      'zone_states': dict({
        '1': dict({
          'activity_data_points': dict({
            'heatingPower': dict({
              'percentage': 0.0,
              'timestamp': '2024-02-27T20:30:01.259Z',
              'type': 'PERCENTAGE',
            }),
          }),
          'geolocation_override': False,
          'geolocation_override_disable_time': None,
          'link': dict({
            'state': 'ONLINE',
          }),
          'next_schedule_change': dict({
            'setting': dict({
              'power': 'ON',
              'temperature': dict({
                'celsius': 18.0,
                'fahrenheit': 64.4,
                'precision': None,
                'timestamp': None,
                'type': None,
              }),
              'type': 'HEATING',
            }),
            'start': '2024-02-27T21:00:00Z',
          }),
          'next_time_block': dict({
            'start': '2024-02-27T21:00:00.000Z',
          }),
          'open_window': None,
          'overlay': dict({
            'projected_expiry': None,
            'setting': dict({
              'power': 'ON',
              'temperature': dict({
                'celsius': 17.0,
                'fahrenheit': 62.6,
                'precision': None,
                'timestamp': None,
                'type': None,
              }),
              'type': 'HEATING',
            }),
            'termination': dict({
              'projectedExpiry': None,
              'type': 'MANUAL',
              'typeSkillBasedApp': 'MANUAL',
            }),
            'type': 'MANUAL',
          }),
          'overlay_type': 'MANUAL',
          'preparation': None,
          'sensor_data_points': dict({
            'humidity': dict({
              'percentage': 51.0,
              'timestamp': '2024-02-27T20:37:02.553Z',
              'type': 'PERCENTAGE',
            }),
            'insideTemperature': dict({
              'celsius': 17.98,
              'fahrenheit': 64.36,
              'precision': dict({
                'celsius': 0.1,
                'fahrenheit': 0.1,
              }),
              'timestamp': '2024-02-27T20:37:02.553Z',
              'type': 'TEMPERATURE',
            }),
          }),
          'setting': dict({
            'power': 'ON',
            'temperature': dict({
              'celsius': 17.0,
              'fahrenheit': 62.6,
              'precision': None,
              'timestamp': None,
              'type': None,
            }),
            'type': 'HEATING',
          }),
          'tado_mode': 'HOME',
        }),
        '2': dict({
          'activity_data_points': dict({
            'heatingPower': dict({
              'percentage': 11.0,
              'timestamp': '2024-02-27T20:37:22.791Z',
              'type': 'PERCENTAGE',
            }),
          }),
          'geolocation_override': False,
          'geolocation_override_disable_time': None,
          'link': dict({
            'state': 'ONLINE',
          }),
          'next_schedule_change': None,
          'next_time_block': dict({
            'start': '2024-02-27T21:00:00.000Z',
          }),
          'open_window': None,
          'overlay': dict({
            'projected_expiry': None,
            'setting': dict({
              'power': 'ON',
              'temperature': dict({
                'celsius': 15.0,
                'fahrenheit': 59.0,
                'precision': None,
                'timestamp': None,
                'type': None,
              }),
              'type': 'HEATING',
            }),
            'termination': dict({
              'projectedExpiry': None,
              'type': 'MANUAL',
              'typeSkillBasedApp': 'MANUAL',
            }),
            'type': 'MANUAL',
          }),
          'overlay_type': 'MANUAL',
          'preparation': None,
          'sensor_data_points': dict({
            'humidity': dict({
              'percentage': 56.9,
              'timestamp': '2024-02-27T20:38:14.791Z',
              'type': 'PERCENTAGE',
            }),
            'insideTemperature': dict({
              'celsius': 14.89,
              'fahrenheit': 58.8,
              'precision': dict({
                'celsius': 0.1,
                'fahrenheit': 0.1,
              }),
              'timestamp': '2024-02-27T20:38:14.791Z',
              'type': 'TEMPERATURE',
            }),
          }),
          'setting': dict({
            'power': 'ON',
            'temperature': dict({
              'celsius': 15.0,
              'fahrenheit': 59.0,
              'precision': None,
              'timestamp': None,
              'type': None,
            }),
            'type': 'HEATING',
          }),
          'tado_mode': 'HOME',
        }),
        '3': dict({
          'activity_data_points': dict({
            'heatingPower': dict({
              'percentage': 0.0,
              'timestamp': '2024-02-27T20:28:21.301Z',
              'type': 'PERCENTAGE',
            }),
          }),
          'geolocation_override': False,
          'geolocation_override_disable_time': None,
          'link': dict({
            'state': 'ONLINE',
          }),
          'next_schedule_change': dict({
            'setting': dict({
              'power': 'ON',
              'temperature': dict({
                'celsius': 18.0,
                'fahrenheit': 64.4,
                'precision': None,
                'timestamp': None,
                'type': None,
              }),
              'type': 'HEATING',
            }),
            'start': '2024-02-27T21:00:00Z',
          }),
          'next_time_block': dict({
            'start': '2024-02-27T21:00:00.000Z',
          }),
          'open_window': None,
          'overlay': dict({
            'projected_expiry': None,
            'setting': dict({
              'power': 'ON',
              'temperature': dict({
                'celsius': 17.0,
                'fahrenheit': 62.6,
                'precision': None,
                'timestamp': None,
                'type': None,
              }),
              'type': 'HEATING',
            }),
            'termination': dict({
              'projectedExpiry': None,
              'type': 'MANUAL',
              'typeSkillBasedApp': 'MANUAL',
            }),
            'type': 'MANUAL',
          }),
          'overlay_type': 'MANUAL',
          'preparation': None,
          'sensor_data_points': dict({
            'humidity': dict({
              'percentage': 55.5,
              'timestamp': '2024-02-27T20:37:12.297Z',
              'type': 'PERCENTAGE',
            }),
            'insideTemperature': dict({
              'celsius': 17.52,
              'fahrenheit': 63.54,
              'precision': dict({
                'celsius': 0.1,
                'fahrenheit': 0.1,
              }),
              'timestamp': '2024-02-27T20:37:12.297Z',
              'type': 'TEMPERATURE',
            }),
          }),
          'setting': dict({
            'power': 'ON',
            'temperature': dict({
              'celsius': 17.0,
              'fahrenheit': 62.6,
              'precision': None,
              'timestamp': None,
              'type': None,
            }),
            'type': 'HEATING',
          }),
          'tado_mode': 'HOME',
        }),
        '4': dict({
          'activity_data_points': dict({
            'heatingPower': dict({
              'percentage': 0.0,
              'timestamp': '2024-02-27T20:27:18.903Z',
              'type': 'PERCENTAGE',
            }),
          }),
          'geolocation_override': False,
          'geolocation_override_disable_time': None,
          'link': dict({
            'state': 'ONLINE',
          }),
          'next_schedule_change': dict({
            'setting': dict({
              'power': 'ON',
              'temperature': dict({
                'celsius': 18.0,
                'fahrenheit': 64.4,
                'precision': None,
                'timestamp': None,
                'type': None,
              }),
              'type': 'HEATING',
            }),
            'start': '2024-02-27T21:00:00Z',
          }),
          'next_time_block': dict({
            'start': '2024-02-27T21:00:00.000Z',
          }),
          'open_window': None,
          'overlay': dict({
            'projected_expiry': None,
            'setting': dict({
              'power': 'OFF',
              'temperature': None,
              'type': 'HEATING',
            }),
            'termination': dict({
              'projectedExpiry': None,
              'type': 'MANUAL',
              'typeSkillBasedApp': 'MANUAL',
            }),
            'type': 'MANUAL',
          }),
          'overlay_type': 'MANUAL',
          'preparation': None,
          'sensor_data_points': dict({
            'humidity': dict({
              'percentage': 63.3,
              'timestamp': '2024-02-27T20:37:20.931Z',
              'type': 'PERCENTAGE',
            }),
            'insideTemperature': dict({
              'celsius': 18.57,
              'fahrenheit': 65.43,
              'precision': dict({
                'celsius': 0.1,
                'fahrenheit': 0.1,
              }),
              'timestamp': '2024-02-27T20:37:20.931Z',
              'type': 'TEMPERATURE',
            }),
          }),
          'setting': dict({
            'power': 'OFF',
            'temperature': None,
            'type': 'HEATING',
          }),
          'tado_mode': 'HOME',
        }),
      }),
    }),
  ])
# ---
# name: test_get_zones
  list([
    dict({
      'date_created': '2023-04-12T12:58:12.737Z',
      'dazzle_enabled': True,
      'dazzle_mode': dict({
        'enabled': True,
        'supported': True,
      }),
      'device_types': list([
        'VA02',
      ]),
      'devices': list([
        dict({
          'battery_state': 'NORMAL',
          'characteristics': dict({
            'capabilities': list([
              'INSIDE_TEMPERATURE_MEASUREMENT',
              'IDENTIFY',
            ]),
          }),
          'child_lock_enabled': True,
          'connection_state': dict({
            'timestamp': '2024-02-27T20:30:13.976Z',
            'value': True,
          }),
          'current_fw_version': '95.1',
          'device_type': 'VA02',
          'in_pairing_mode': None,
          'mounting_state': dict({
            'timestamp': '2024-02-04T10:17:00.266Z',
            'value': 'CALIBRATED',
          }),
          'mounting_state_with_error': 'CALIBRATED',
          'orientation': 'HORIZONTAL',
          'serial_no': 'Serial1',
          'short_serial_no': 'ShortSerial1',
        }),
      ]),
      'id': 2,
      'name': 'Zone1',
      'open_window_detection': dict({
        'enabled': False,
        'supported': True,
        'timeout_in_seconds': 900,
      }),
      'report_available': False,
      'show_schedule_detup': False,
      'supports_dazzle': True,
      'type': 'HEATING',
    }),
    dict({
      'date_created': '2023-01-29T16:02:14.530Z',
      'dazzle_enabled': True,
      'dazzle_mode': dict({
        'enabled': True,
        'supported': True,
      }),
      'device_types': list([
        'VA02',
      ]),
      'devices': list([
        dict({
          'battery_state': 'NORMAL',
          'characteristics': dict({
            'capabilities': list([
              'INSIDE_TEMPERATURE_MEASUREMENT',
              'IDENTIFY',
            ]),
          }),
          'child_lock_enabled': True,
          'connection_state': dict({
            'timestamp': '2024-02-27T20:32:05.188Z',
            'value': True,
          }),
          'current_fw_version': '95.1',
          'device_type': 'VA02',
          'in_pairing_mode': None,
          'mounting_state': dict({
            'timestamp': '2023-10-09T15:39:08.131Z',
            'value': 'CALIBRATED',
          }),
          'mounting_state_with_error': 'CALIBRATED',
          'orientation': 'HORIZONTAL',
          'serial_no': 'Serial2',
          'short_serial_no': 'ShortSerial2',
        }),
      ]),
      'id': 1,
      'name': 'Zone2',
      'open_window_detection': dict({
        'enabled': False,
        'supported': True,
        'timeout_in_seconds': 900,
      }),
      'report_available': False,
      'show_schedule_detup': True,
      'supports_dazzle': True,
      'type': 'HEATING',
    }),
    dict({
      'date_created': '2023-04-14T07:52:56.352Z',
      'dazzle_enabled': True,
      'dazzle_mode': dict({
        'enabled': True,
        'supported': True,
      }),
      'device_types': list([
        'VA02',
      ]),
      'devices': list([
        dict({
          'battery_state': 'NORMAL',
          'characteristics': dict({
            'capabilities': list([
              'INSIDE_TEMPERATURE_MEASUREMENT',
              'IDENTIFY',
            ]),
          }),
          'child_lock_enabled': True,
          'connection_state': dict({
            'timestamp': '2024-02-27T20:31:11.417Z',
            'value': True,
          }),
          'current_fw_version': '95.1',
          'device_type': 'VA02',
          'in_pairing_mode': None,
          'mounting_state': dict({
            'timestamp': '2024-02-26T13:33:10.647Z',
            'value': 'CALIBRATED',
          }),
          'mounting_state_with_error': 'CALIBRATED',
          'orientation': 'HORIZONTAL',
          'serial_no': 'Serial3',
          'short_serial_no': 'ShortSerial3',
        }),
      ]),
      'id': 3,
      'name': 'Zone3',
      'open_window_detection': dict({
        'enabled': False,
        'supported': True,
        'timeout_in_seconds': 900,
      }),
      'report_available': False,
      'show_schedule_detup': True,
      'supports_dazzle': True,
      'type': 'HEATING',
    }),
    dict({
      'date_created': '2023-04-14T07:58:45.196Z',
      'dazzle_enabled': True,
      'dazzle_mode': dict({
        'enabled': True,
        'supported': True,
      }),
      'device_types': list([
        'VA02',
      ]),
      'devices': list([
        dict({
          'battery_state': 'NORMAL',
          'characteristics': dict({
            'capabilities': list([
              'INSIDE_TEMPERATURE_MEASUREMENT',
              'IDENTIFY',
            ]),
          }),
          'child_lock_enabled': True,
          'connection_state': dict({
            'timestamp': '2024-02-27T20:33:21.903Z',
            'value': True,
          }),
          'current_fw_version': '95.1',
          'device_type': 'VA02',
          'in_pairing_mode': None,
          'mounting_state': dict({
            'timestamp': '2024-02-19T17:23:30.537Z',
            'value': 'CALIBRATED',
          }),
          'mounting_state_with_error': 'CALIBRATED',
          'orientation': 'HORIZONTAL',
          'serial_no': 'Serial4',
          'short_serial_no': 'ShortSerial4',
        }),
      ]),
      'id': 4,
      'name': 'Zone4',
      'open_window_detection': dict({
        'enabled': False,
        'supported': True,
        'timeout_in_seconds': 900,
      }),
      'report_available': False,
      'show_schedule_detup': True,
      'supports_dazzle': True,
      'type': 'HEATING',
    }),
  ])
# ---
